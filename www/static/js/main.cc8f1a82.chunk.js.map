{"version":3,"sources":["services/covid.service.js","components/chart/chart.js","components/daily-stats/daily-stats.js","components/map/map.js","components/settings/settings.js","components/help/help.js","components/app-bar/app-bar.js","components/app/app.js","serviceWorker.js","index.js"],"names":["covidService","this","_apiBase","console","log","url","Date","toISOString","split","fetch","res","json","now","MyChart","props","state","load_vol_chart","volume_chart_data","updateStats","getStats","then","stats","setState","label","data","map","vol","x","parse","date","y","cases","deaths","recovered","style","height","width","series","showPoints","axes","primary","type","position","tooltip","Component","DailyStats","loading","getTodayStats","getYesterdayStats","ycases","ydeaths","yrecovered","CircularProgress","Paper","variant","Typography","component","padding","parseFloat","toFixed","withScriptjs","withGoogleMap","iconMarker","window","google","maps","MarkerImage","Size","defaultZoom","zoom","defaultCenter","center","lat","latitude","lng","longitude","sanitizers","sanitizer","key","id","icon","title","places","place","circle","radius","options","Settings","myChangeHandler","event","username","target","value","noWrap","Help","Red","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ListItemLink","to","CustomLink","React","useMemo","forwardRef","linkProps","ref","ListItem","button","ListItemIcon","ListItemText","MyAppBar","classes","useTheme","useState","open","setOpen","status","setStatus","setSanitizer","handleDrawerClose","usePosition","fetchData","a","response","areas","volume_map_data","strokeColor","color","fetchSanitizer","volume_map_sanitizer","initData","status_id","status_name","status_link","name","link","useEffect","process","GOOGLE_MAP_KEY","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","Drawer","anchor","paper","direction","Divider","List","Alert","severity","AlertTitle","path","googleMapURL","loadingElement","containerElement","mapElement","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cc8f1a82.chunk.js","sourcesContent":["export default class covidService {\r\n\r\n  constructor() {\r\n    this._apiBase = 'http://185.69.153.46:3000'; // process.env.REACT_APP_BACKEND_API;\r\nconsole.log('API:'+this._apiBase);\r\n     // 'http://localhost:3000';\r\n     // this._apiBase = 'http://ec2-54-80-100-248.compute-1.amazonaws.com:3000';\r\n  }\r\n\r\n  async getTodayStats(url = '/stats/' + new Date().toISOString().split('T')[0]) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    console.log(res)\r\n    return await res.json();\r\n  }\r\n\r\n  async getYesterdayStats(url = '/stats/' + new Date(Date.now() - 86400000).toISOString().split('T')[0]) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    // console.log(res)\r\n    return await res.json();\r\n  }\r\n\r\n  async getStats(url = '/stats') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }\r\n\r\n  async getMap(url = '/area') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }\r\n\r\n  async getStatus(url = '/setting/status_id') {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n    return await res.json();\r\n  }  \r\n}","import React, { Component } from \"react\";\r\nimport { Chart } from 'react-charts'\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class MyChart extends Component {\r\n  covidService = new covidService();\r\n  \r\n  state = {\r\n    load_vol_chart: true,\r\n    volume_chart_data: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateStats();\r\n  }\r\n\r\n  updateStats() {\r\n    this.covidService.getStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          volume_chart_data: [\r\n            {\r\n              label: \"Захворювань\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.cases\r\n              }))\r\n            },\r\n            {\r\n              label: \"Смертей\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.deaths\r\n              }))\r\n            },\r\n            {\r\n              label: \"Вилікувалося\",\r\n              data: stats.map(vol => ({\r\n                x: Date.parse(vol.date),\r\n                y: vol.recovered\r\n              }))\r\n            }\r\n          ]\r\n        })\r\n      });\r\n  }\r\n      \r\n  render() {\r\n  \r\n      return (\r\n        <>\r\n        <div style={{ height: '70vh', width: '100%' }} >\r\n            <Chart data={this.state.volume_chart_data}  \r\n            series={ {showPoints: false} } \r\n            axes={[\r\n              { primary: true, type: 'time', position: 'bottom' },\r\n              { type: 'linear', position: 'left' }\r\n            ]} \r\n          tooltip />\r\n        </div>    \r\n        </>\r\n      )\r\n      \r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport MyChart from '../chart/chart'\r\nimport covidService from '../../services/covid.service';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\nexport default class DailyStats extends Component {\r\n  \r\n  covidService = new covidService();\r\n\r\n  state = {\r\n    cases: null,\r\n    deaths: null,\r\n    recovered: null,\r\n    loading: true\r\n  };\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateStats();\r\n  }\r\n\r\n  updateStats() {\r\n    this.covidService.getTodayStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          cases: stats.cases,\r\n          deaths: stats.deaths,\r\n          recovered: stats.recovered,\r\n          loading: false\r\n        })\r\n      });\r\n\r\n      this.covidService.getYesterdayStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          ycases: stats.cases,\r\n          ydeaths: stats.deaths,\r\n          yrecovered: stats.recovered\r\n        })\r\n      })  \r\n  }\r\n\r\n  render() {\r\n    const { cases, deaths, recovered, loading, ycases, ydeaths, yrecovered, } = this.state;\r\n\r\n    if (loading) {\r\n      return ( <CircularProgress /> );\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h5\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      К-сть захворювань {cases} {parseFloat(cases/ycases).toFixed(2)}%\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n \r\n\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h5\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      К-сть смертей {deaths} {parseFloat(deaths/ydeaths).toFixed(2)}%\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n      <Paper variant=\"outlined\">\r\n      <Typography variant=\"h5\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n      К-сть виздоровлень {recovered} {parseFloat(recovered/yrecovered).toFixed(2)}%\r\n      </Typography>\r\n      {/* <Typography component=\"p\">+20%</Typography> */}\r\n      </Paper>\r\n      <Paper variant=\"outlined\">\r\n        <Typography variant=\"h5\" component=\"h3\" style={{padding: 1 + 'em'}}>\r\n          Динаміка захворювань\r\n        </Typography>  \r\n        <MyChart />\r\n      </Paper>        \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {Fragment} from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  Circle\r\n} from \"react-google-maps\";\r\n\r\n\r\nconst Map = props => {\r\n//  console.log(props);\r\n    let iconMarker = new window.google.maps.MarkerImage(\r\n      \"https://lh3.googleusercontent.com/bECXZ2YW3j0yIEBVo92ECVqlnlbX9ldYNGrCe0Kr4VGPq-vJ9Xncwvl16uvosukVXPfV=w300\",\r\n      null, /* size is determined at runtime */\r\n      null, /* origin is 0,0 */\r\n      null, /* anchor is bottom center of the scaled image */\r\n      new window.google.maps.Size(32, 32)\r\n    );\r\n\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={props.zoom}\r\n        defaultCenter={props.center}\r\n      >\r\n        \r\n              <Marker \r\n                position={{\r\n                  lat: props.latitude, // 48.9185051,\r\n                  lng: props.longitude // 24.7152683\r\n                }}\r\n              />\r\n\r\n\r\n        {props.sanitizers.map(sanitizer => {\r\n          return (\r\n            <Fragment key={sanitizer.id}>\r\n              <Marker\r\n                icon={iconMarker} \r\n                // onClick={onClick} \r\n                title={sanitizer.title} \r\n                position={{\r\n                  lat: parseFloat(sanitizer.latitude),\r\n                  lng: parseFloat(sanitizer.longitude)\r\n                }}\r\n              /> \r\n            </Fragment>\r\n          );\r\n        })}\r\n\r\n        {props.places.map(place => {\r\n          return (\r\n            <Fragment key={place.id}>\r\n\r\n              {/* <Marker\r\n                position={{\r\n                  lat: parseFloat(place.latitude),\r\n                  lng: parseFloat(place.longitude)\r\n                }}\r\n              /> */}\r\n              {place.circle && <Circle\r\n                defaultCenter={{\r\n                  lat: parseFloat(place.latitude),\r\n                  lng: parseFloat(place.longitude)\r\n                }}\r\n                radius={place.circle.radius}\r\n                options={place.circle.options}\r\n              />}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </GoogleMap>\r\n    );\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class Settings extends Component {\r\n\r\n  covidService = new covidService();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '' };\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({username: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      {/* <form>\r\n        <h1>Налаштування</h1>\r\n        <h2>привіт, {this.state.username}</h2>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.myChangeHandler}\r\n        />\r\n      </form> */}\r\n        <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n        <h1>МАЛЮК ЦОІ</h1>\r\n        <Typography variant=\"h6\" noWrap>\r\n            Alert COVID\r\n        </Typography>\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Typography from '@material-ui/core/Typography';\r\n\r\nexport default class Help extends Component {\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n      <>\r\n\r\n      <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n\r\n      <h4>Знання достовірних фактів і дотримання запобіжних заходів допоможуть вам захистити себе й оточуючих. \r\n    Виконуйте поради місцевого органу охорони здоров’я.</h4>\r\n<p>Як зупинити поширення COVID-19:\r\nчасто мийте руки милом і водою або використовуйте спиртовмісний антисептик для рук;\r\nтримайтеся на безпечній відстані від усіх, хто кашляє або чхає;\r\nвдягайте маску, якщо дотримуватися дистанції неможливо;\r\nне торкайтеся очей, носа або рота;\r\nпід час кашлю або чхання прикривайте ніс і рот зігнутим ліктем або серветкою;\r\nне виходьте з дому, якщо погано почуваєтесь;\r\nякщо у вас лихоманка, кашель і вам важко дихати, зверніться до лікаря.</p>\r\n\r\n      </Paper>\r\n \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport DailyStats from '../daily-stats/daily-stats'\r\nimport Map from '../map/map'\r\nimport Settings from '../settings/settings'\r\nimport Help from '../help/help'\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport { usePosition } from 'use-position';\r\n\r\n\r\nconst sanitizers = [\r\n  {\r\n    id: 1,\r\n    title: \"Стометрівка\",\r\n    latitude: \"48.92\",\r\n    longitude: \"24.71\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Плаза\",\r\n    latitude: \"48.92\",\r\n    longitude: \"24.70\",   \r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Центр\",\r\n    latitude: \"48.91\",\r\n    longitude: \"24.705\",   \r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Стометрівка 2\",\r\n    latitude: \"48.92\",\r\n    longitude: \"24.71\",\r\n  },\r\n];\r\n\r\n// updateMap() {\r\n//   this.covidService.getMap()\r\n//     .then((areas) => {\r\n//       this.setState({\r\n//         volume_map_data: [\r\n//           {\r\n//             data: areas.map(vol => ({\r\n//               id: vol.id,\r\n//               name: vol.title,\r\n//               lat: vol.lat,\r\n//               lng: vol.lng,\r\n//               circle: {\r\n//                 radius: vol.radius,\r\n//                 options: {\r\n//                   strokeColor: vol.color\r\n//                 }\r\n//               }\r\n//             }))  \r\n//           }\r\n//         ]\r\n//       })\r\n//     });\r\n// }\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction Red() {\r\n  return <>\r\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\r\n  <h3>Червона зона</h3>\r\n<Typography component={'div'}>Заборонено:\r\n<ul>\r\n<li>робота громадського транспорту;</li>\r\n<li>відвідування освітніх установ;</li>\r\n<li>робота ТРЦ, кафе і ресторанів.</li>\r\n<li>посадка в міжобласний транспорт (висадка дозволена)</li>\r\n</ul>\r\n</Typography>\r\n</Paper>\r\n  </>;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const CustomLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef((linkProps, ref) => (\r\n        <Link ref={ref} to={to} {...linkProps} />\r\n      )),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={CustomLink}>\r\n        <ListItemIcon>{icon}</ListItemIcon> \r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\n\r\nexport default function MyAppBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useState([])\r\n  const [status, setStatus] = useState([]);\r\n  const [sanitizer, setSanitizer] = useState([]);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const watch = true;\r\n  const {\r\n    latitude,\r\n    longitude,\r\n  } = usePosition(watch);\r\n  \r\n  const fetchData = async () => {\r\n        \r\n    const response = await fetch(\r\n       'http://185.69.153.46:3000/area'\r\n    );\r\n    const areas = await response.json();\r\n    setState({\r\n                volume_map_data: \r\n                  \r\n                    areas.map(vol => ({\r\n                      id: vol.id,\r\n                      title: vol.title,                         \r\n                      latitude: vol.lat,\r\n                      longitude: vol.lng,\r\n                      circle: {\r\n                        radius: vol.radius,\r\n                        options: {\r\n                          strokeColor: '#' + vol.color\r\n                        }\r\n                      }\r\n                    }))   \r\n    });    \r\n    \r\n    // console.log(state.volume_map_data);      \r\n};\r\n\r\nconst fetchSanitizer = async () => {\r\n        \r\n  const response = await fetch(\r\n    'http://185.69.153.46:3000/sanitizer'\r\n  );\r\n  const sanitizers = await response.json();\r\n  setSanitizer({\r\n              volume_map_sanitizer:  \r\n                  sanitizers.map(vol => ({\r\n                    id: vol.id,\r\n                    title: vol.title,                         \r\n                    latitude: vol.lat,\r\n                    longitude: vol.lng,\r\n                  }))   \r\n  });      \r\n  // console.log(state.volume_map_sanitizer);      \r\n};\r\n\r\nconst initData = async () => {\r\n        \r\n  const response = await fetch(\r\n    'http://185.69.153.46:3000/setting/status_id'\r\n  );\r\n  const status_id = await response.json();\r\n  let type = 3;\r\n  let status_name = '';\r\n  let status_link = '';\r\n  switch (status_id.value) {\r\n      case \"1\": type = \"error\"; status_name = \"червоній\"; status_link = \"red\"; break;\r\n      case \"2\": type = \"warning\";  status_name = \"помаранчевій\"; status_link = \"orange\"; break;\r\n      case \"3\": type = \"info\"; status_name = \"жовтій\"; status_link = \"yellow\";break;\r\n      case \"4\": default: type = \"success\"; status_name = \"зеленій\"; status_link = \"green\"; break;\r\n  }\r\n  setStatus({\r\n    status_id: status_id.value,\r\n    type: type,\r\n    name: status_name,\r\n    link: status_link\r\n  });      \r\n};\r\n\r\n  useEffect(() => {\r\n     initData();   \r\n     fetchData();   \r\n     fetchSanitizer();   \r\n    }, []);\r\n\r\n    // console.log('stat ', status.type_id);      \r\n\r\n  // const [volume_map_sanitizer, fetchSanitizer] = useState(0);\r\n\r\n  const google_map_key = process.env.GOOGLE_MAP_KEY;\r\n  // console.log(google_map_key);\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            МАЛЮК ЦОІ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Router>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List onClick={handleDrawerClose}  >\r\n          <ListItemLink primary={'Статистика'} icon={<EqualizerIcon />} to='/' />\r\n          <ListItemLink primary={'Рекомендації'} icon={<HelpIcon />} to='/help' />\r\n          <ListItemLink primary={'Карта'} icon={<MapIcon />} to='/map' />\r\n          <ListItemLink primary={'Про додаток'} icon={<InboxIcon />} to='/settings' />\r\n        </List>\r\n\r\n        <Divider />\r\n        {/* <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n\r\n        <Alert severity={status.type}>\r\n        <AlertTitle>Увага</AlertTitle>\r\n      м. Івано-Франківськ - Ви знаходитеся в {status.name} зоні! <Link to={status.link}>Перегляньте наші рекомендації</Link></Alert>\r\n\r\n        <Switch>\r\n          <Route path=\"/red\">\r\n            <Red />\r\n          </Route>\r\n          <Route path=\"/settings\">\r\n            <Settings />\r\n          </Route>\r\n          <Route path=\"/help\">\r\n            <Help />\r\n          </Route>\r\n          <Route path=\"/map\">\r\n          <Map \r\n    center={{ lat: 48.92, lng: 24.71 }}\r\n    zoom={12}\r\n    latitude={latitude} \r\n    longitude={longitude} \r\n    places={state.volume_map_data}\r\n    sanitizers={sanitizer.volume_map_sanitizer} \r\n    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBLlwasnMbQP4pp1Qx0poPnCqnJ_C1lPhk\"  \r\n    loadingElement={<div style={{ height: `100%` }} />}\r\n    containerElement={<div style={{ height: `800px` }} />}\r\n    mapElement={<div style={{ height: `100%` }} />}\r\n  />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <DailyStats />\r\n          </Route>    \r\n        </Switch>\r\n      \r\n        \r\n      </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport MyAppBar from '../app-bar/app-bar'\r\n\r\nexport default class App extends Component { \r\n  render()  {  \r\n    return (\r\n      <>\r\n        <MyAppBar />\r\n      </>\r\n    )\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n// importScripts(\"https://js.pusher.com/beams/service-worker.js\");\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import * as PusherPushNotifications from '@pusher/push-notifications-web'\r\n\r\n// const beamsClient = new PusherPushNotifications.Client({\r\n//     instanceId: '1927be8c-d256-4d48-b1a1-c823d23c3fba',\r\n//   });\r\n\r\n// beamsClient.start()\r\n//     .then(() => beamsClient.addDeviceInterest('hello'))\r\n//     .then(() => console.log('Successfully registered and subscribed!'))\r\n//     .catch(console.error);\r\n\r\nReactDOM.render(<App />, document.getElementById('root') );\r\nserviceWorker.register();\r\n"],"sourceRoot":""}