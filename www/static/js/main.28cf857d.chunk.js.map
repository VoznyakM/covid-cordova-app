{"version":3,"sources":["services/covid.service.js","components/chart/chart.js","components/daily-stats/daily-stats.js","components/map/map.js","components/settings/settings.js","components/help/help.js","components/app-bar/app-bar.js","components/app/app.js","serviceWorker.js","index.js"],"names":["covidService","this","_apiBase","process","url","Date","toISOString","split","fetch","res","json","now","MyChart","props","state","load_vol_chart","volume_chart_data","updateStats","getStats","then","stats","setState","label","data","map","vol","x","parse","date","y","cases","deaths","recovered","style","height","width","series","showPoints","axes","primary","type","position","tooltip","Component","DailyStats","loading","getTodayStats","getYesterdayStats","ycases","ydeaths","yrecovered","CircularProgress","Paper","variant","Typography","component","padding","fontSize","parseFloat","toFixed","withScriptjs","withGoogleMap","iconMarker","window","google","maps","MarkerImage","Size","defaultZoom","zoom","defaultCenter","center","lat","latitude","lng","longitude","sanitizers","sanitizer","key","id","icon","title","places","place","circle","radius","options","Settings","myChangeHandler","event","username","target","value","Link","href","src","Help","Red","Orange","Yellow","Green","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","ListItemLink","to","CustomLink","React","useMemo","forwardRef","linkProps","ref","ListItem","button","ListItemIcon","ListItemText","MyAppBar","classes","useTheme","useState","open","setOpen","status","setStatus","setSanitizer","handleDrawerClose","usePosition","fetchData","a","response","areas","volume_map_data","strokeColor","color","fetchSanitizer","volume_map_sanitizer","initData","status_id","response_orange","orange","status_name","status_link","name","link","useEffect","GOOGLE_MAP_KEY","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","Alert","severity","AlertTitle","path","googleMapURL","loadingElement","containerElement","mapElement","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28cf857d.chunk.js","sourcesContent":["export default class covidService {\n\n  constructor() {\n    this._apiBase = process.env.REACT_APP_BACKEND_API;\n     // 'http://localhost:3000';\n     // this._apiBase = 'http://ec2-54-80-100-248.compute-1.amazonaws.com:3000';\n  }\n\n  async getTodayStats(url = '/stats/' + new Date().toISOString().split('T')[0]) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    // console.log(res)\n    return await res.json();\n  }\n\n  async getYesterdayStats(url = '/stats/' + new Date(Date.now() - 86400000).toISOString().split('T')[0]) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    // console.log(res)\n    return await res.json();\n  }\n\n  async getStats(url = '/stats') {\n    const res = await fetch(`${this._apiBase}${url}`);\n    return await res.json();\n  }\n\n  async getMap(url = '/area') {\n    const res = await fetch(`${this._apiBase}${url}`);\n    return await res.json();\n  }\n\n  async getStatus(url = '/setting/status_id') {\n    const res = await fetch(`${this._apiBase}${url}`);\n    return await res.json();\n  }  \n}","import React, { Component } from \"react\";\nimport { Chart } from 'react-charts'\nimport covidService from '../../services/covid.service';\n\nexport default class MyChart extends Component {\n  covidService = new covidService();\n  \n  state = {\n    load_vol_chart: true,\n    volume_chart_data: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateStats();\n  }\n\n  updateStats() {\n    this.covidService.getStats()\n      .then((stats) => {\n        this.setState({\n          volume_chart_data: [\n            {\n              label: \"Захворювань\",\n              data: stats.map(vol => ({\n                x: Date.parse(vol.date),\n                y: vol.cases\n              }))\n            },\n            {\n              label: \"Смертей\",\n              data: stats.map(vol => ({\n                x: Date.parse(vol.date),\n                y: vol.deaths\n              }))\n            },\n            {\n              label: \"Вилікувалося\",\n              data: stats.map(vol => ({\n                x: Date.parse(vol.date),\n                y: vol.recovered\n              }))\n            }\n          ]\n        })\n      });\n  }\n      \n  render() {\n  \n      return (\n        <>\n        <div style={{ height: '65vh', width: '100%' }} >\n            <Chart data={this.state.volume_chart_data}  \n            series={ {showPoints: false} } \n            axes={[\n              { primary: true, type: 'time', position: 'bottom' },\n              { type: 'linear', position: 'left' }\n            ]} \n          tooltip />\n        </div>    \n        </>\n      )\n      \n  }\n}","import React, { Component } from \"react\";\nimport MyChart from '../chart/chart'\nimport covidService from '../../services/covid.service';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n\nexport default class DailyStats extends Component {\n  \n  covidService = new covidService();\n\n  state = {\n    cases: null,\n    deaths: null,\n    recovered: null,\n    loading: true\n  };\n  \n\n  constructor(props) {\n    super(props);\n    this.updateStats();\n  }\n\n  updateStats() {\n    this.covidService.getTodayStats()\n      .then((stats) => {\n        this.setState({\n          cases: stats.cases,\n          deaths: stats.deaths,\n          recovered: stats.recovered,\n          loading: false\n        })\n      });\n\n      this.covidService.getYesterdayStats()\n      .then((stats) => {\n        this.setState({\n          ycases: stats.cases,\n          ydeaths: stats.deaths,\n          yrecovered: stats.recovered\n        })\n      })  \n  }\n\n  render() {\n    const { cases, deaths, recovered, loading, ycases, ydeaths, yrecovered, } = this.state;\n\n    if (loading) {\n      return ( <CircularProgress /> );\n    }\n\n    return (\n      <>\n      <Paper variant=\"outlined\">\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\n      К-сть захворювань: {cases} <small style={{fontSize: '0.6em'}}>{parseFloat(cases/ycases).toFixed(2)}%</small>\n      </Typography>\n      {/* <Typography component=\"p\">+20%</Typography> */}\n      </Paper>\n \n\n      <Paper variant=\"outlined\">\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\n      К-сть смертей: {deaths} <small style={{fontSize: '0.6em'}}>{parseFloat(deaths/ydeaths).toFixed(2)}%</small>\n      </Typography>\n      {/* <Typography component=\"p\">+20%</Typography> */}\n      </Paper>\n      <Paper variant=\"outlined\">\n      <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\n      К-сть виздоровлень: {recovered} <small style={{fontSize: '0.6em'}}>{parseFloat(recovered/yrecovered).toFixed(2)}%</small>\n      </Typography>\n      {/* <Typography component=\"p\">+20%</Typography> */}\n      </Paper>\n      <Paper variant=\"outlined\">\n        <Typography variant=\"h6\" component=\"h3\" style={{padding: 1 + 'em'}}>\n          Динаміка захворювань\n        </Typography>  \n        <MyChart />\n      </Paper>        \n      </>\n    );\n  }\n}\n","import React, {Fragment} from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker,\n  Circle\n} from \"react-google-maps\";\n\n\nconst Map = props => {\n//  console.log(props);\n    let iconMarker = new window.google.maps.MarkerImage(\n      \"https://lh3.googleusercontent.com/bECXZ2YW3j0yIEBVo92ECVqlnlbX9ldYNGrCe0Kr4VGPq-vJ9Xncwvl16uvosukVXPfV=w300\",\n      null, /* size is determined at runtime */\n      null, /* origin is 0,0 */\n      null, /* anchor is bottom center of the scaled image */\n      new window.google.maps.Size(32, 32)\n    );\n\n    return (\n      <GoogleMap\n        defaultZoom={props.zoom}\n        defaultCenter={props.center}\n      >\n        \n              <Marker \n                position={{\n                  lat: props.latitude, // 48.9185051,\n                  lng: props.longitude // 24.7152683\n                }}\n              />\n\n\n        {props.sanitizers.map(sanitizer => {\n          return (\n            <Fragment key={sanitizer.id}>\n              <Marker\n                icon={iconMarker} \n                // onClick={onClick} \n                title={sanitizer.title} \n                position={{\n                  lat: parseFloat(sanitizer.latitude),\n                  lng: parseFloat(sanitizer.longitude)\n                }}\n              /> \n            </Fragment>\n          );\n        })}\n\n        {props.places.map(place => {\n          return (\n            <Fragment key={place.id}>\n\n              {/* <Marker\n                position={{\n                  lat: parseFloat(place.latitude),\n                  lng: parseFloat(place.longitude)\n                }}\n              /> */}\n              {place.circle && <Circle\n                defaultCenter={{\n                  lat: parseFloat(place.latitude),\n                  lng: parseFloat(place.longitude)\n                }}\n                radius={place.circle.radius}\n                options={place.circle.options}\n              />}\n            </Fragment>\n          );\n        })}\n      </GoogleMap>\n    );\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\n\nimport covidService from '../../services/covid.service';\n\nexport default class Settings extends Component {\n\n  covidService = new covidService();\n\n  constructor(props) {\n    super(props);\n    this.state = { username: '' };\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({username: event.target.value});\n  }\n\n  render() {\n    return (\n      <>\n      {/* <form>\n        <h1>Налаштування</h1>\n        <h2>привіт, {this.state.username}</h2>\n        <input\n          type=\"text\"\n          onChange={this.myChangeHandler}\n        />\n      </form> */}\n        <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n        <h1>Stop Pandemia</h1>\n        <Typography variant=\"h6\">\n        Проєкт реалізовано за підтримки UPSHIFT Україна та Центру Освітніх Інновацій.​\n        <br /><br />\n        <p>\n        Мета проєкту – створити доступний аналог безконтактного дезінфектора, а також розробка додатку \n        \n        для оповіщення користувачів інформацією про ризики захворювання з цільовим призначенням в закладах \n        освіти.​</p>\n\n        <p>Наш сайт: <Link href=\"https://stoppandemia.com.ua\" >https://stoppandemia.com.ua</Link></p>\n        <p>Керівники проєкту: Марія Починок, Казмерчук Анатолій, Аронець Олександр</p>\n        <p>Команда проєкту: \n          <br />\n          Возняк Мирослав - розробка додатку та сайту\n          <br />  \n          Бублик Анатолій - математичне моделювання\n          <br />\n          Тумир Юрій - створення безконтактних дезінфекторів\n          <br />\n          Гафійчук Христина - просвітницька робота\n          <br />\n          Угринчук Юрій - асистент\n          <br />\n          <br />\n          <img src=\"http://www.stoppandemia.com.ua/wp-content/uploads/2020/10/upshift-ukraine-secondary-logo_white_ukr.png\" width=\"250\" />\n          <br />        \n          <img src=\"http://www.stoppandemia.com.ua/wp-content/uploads/2020/10/unicef-logo-vector.png\" width=\"260\" />\n          <br />\n          <img src=\"http://www.stoppandemia.com.ua/wp-content/uploads/2020/10/logo-fond-ukr-bez-fona-v-png.png\" width=\"260\" />\n        </p>\n\n        </Typography>\n        </Paper>\n      </>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport Paper from '@material-ui/core/Paper';\nimport { lightBlue } from \"@material-ui/core/colors\";\n// import Typography from '@material-ui/core/Typography';\n\nexport default class Help extends Component {\n\n  render() {\n\n\n    return (\n      <>\n\n      <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n\n      <h4>Знання достовірних фактів і дотримання запобіжних заходів допоможуть вам захистити себе й оточуючих. \n    Виконуйте поради місцевого органу охорони здоров’я.</h4>\n<p>Як зупинити поширення COVID-19:\n<li>проводити наскрізне провітрювання приміщень та проведення вологих прибирань із використанням дезінфекційних засобів у приміщеннях;</li>\n<li>не допускати до роботи осіб з ознаками інфекційного захворювання;</li>\n<li>виділити приміщення для тимчасової ізоляції осіб з ознаками гострого респіраторного захворювання (в разі виявлення такої особи, вжити заходів для ізоляції від здорових осіб та негайно повідомити про випадок відповідний заклад охорони здоров'я);</li>\n<li>обмежити масові заходи в закритих приміщеннях;</li>\n<li>забезпечити необхідні умови для дотримання працівниками правил</li>\n<li>особистої гігієни (рукомийники, мило, одноразові рушники, серветки тощо);</li>\n<li>проводити регулярну обробку рук спиртовмісним засобом та/або мити їх з милом;</li>\n<li>забезпечити медичні пункти необхідними засобами та обладнанням (термометрами, бактерицидними випромінювачами, дезінфекційними та антисептичними засобами, засобами особистої гігієни та індивідуального захисту тощо);</li>\n<li>дотримуватися правил респіраторної гігієни (при кашлі та чханні прикривати рот і ніс серветкою або згином ліктя;</li> \n<li>відразу викидайте серветку в контейнер для сміття з кришкою і обробляйте руки спиртовмісним антисептиком або мийте їх водою з милом);</li>\n<li>користуватися одноразовими масками при необхідності, проводити їх заміну, як тільки вони стануть вологими чи забрудняться.</li>\n</p>\n\n      </Paper>\n \n      </>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\n\nimport DailyStats from '../daily-stats/daily-stats'\nimport Map from '../map/map'\nimport Settings from '../settings/settings'\nimport Help from '../help/help'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport Paper from '@material-ui/core/Paper';\n\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MapIcon from '@material-ui/icons/Map';\nimport { usePosition } from 'use-position';\n\n\n// const sanitizers = [\n//   {\n//     id: 1,\n//     title: \"Стометрівка\",\n//     latitude: \"48.92\",\n//     longitude: \"24.71\",\n//   },\n//   {\n//     id: 2,\n//     title: \"Плаза\",\n//     latitude: \"48.92\",\n//     longitude: \"24.70\",   \n//   },\n//   {\n//     id: 3,\n//     title: \"Центр\",\n//     latitude: \"48.91\",\n//     longitude: \"24.705\",   \n//   },\n//   {\n//     id: 4,\n//     title: \"Стометрівка 2\",\n//     latitude: \"48.92\",\n//     longitude: \"24.71\",\n//   },\n// ];\n\n// updateMap() {\n//   this.covidService.getMap()\n//     .then((areas) => {\n//       this.setState({\n//         volume_map_data: [\n//           {\n//             data: areas.map(vol => ({\n//               id: vol.id,\n//               name: vol.title,\n//               lat: vol.lat,\n//               lng: vol.lng,\n//               circle: {\n//                 radius: vol.radius,\n//                 options: {\n//                   strokeColor: vol.color\n//                 }\n//               }\n//             }))  \n//           }\n//         ]\n//       })\n//     });\n// }\n\n\nconst drawerWidth = 240;\n\nfunction Red() {\n  return <>\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n  <h3>Червона зона</h3>\n<Typography component={'div'}>Заборонено:\n<ul>\n<li>робота громадського транспорту</li>\n<li>відвідування освітніх установ</li>\n<li>робота ТРЦ, кафе і ресторанів</li>\n<li>обмеження зеленої, жовтої та поморанчевої зон зберігаються</li>\n</ul>\n</Typography>\n</Paper>\n  </>;\n}\n\nfunction Orange() {\n  return <>\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n  <h3>Помаранчева зона</h3>\n<Typography component={'div'}>Обмеження:\n<ul>\n<li>діяльність закладів розміщення (хостели, туристичні бази тощо), окрім готелів</li>\n<li>діяльність розважальних закладів, ресторанів у нічний час</li>\n<li>планові госпіталізації в лікарнях</li>\n<li>спортзали, фітнес-центри, заклади культури</li>\n<li>прийом нових змін в дитячі табори</li>\n<li>обмеження для масових заходів: 1 людина на 20 кв. м. та не більше 100 людей</li>\n<li>обмеження жовтої і зеленої зон зберігаються</li>\n</ul>\n</Typography>\n  </Paper>\n  </>;\n}\n\nfunction Yellow() {\n  return <>\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n  <h3>Червона зона</h3>\n<Typography component={'div'}>Заборонено:\n<ul>\n<li>відвідування установ соціального захисту, в яких перебувають люди похилого віку, крім тих, що надають послуги кризово</li>\n<li>на вході до закладів чи заходів потрібно розмістити інформацію про можливу кількість відвідувачів. Контроль має здійснювати власник приміщення або організатор події</li>\n<li>обмеження зеленої зони зберігаються</li>\n</ul>\n</Typography>\n</Paper>\n  </>;\n}\n\nfunction Green() {\n  return <>\n  <Paper variant=\"outlined\"  style={{padding: 1 + 'em'}}>\n  <h3>Червона зона</h3>\n<Typography component={'div'}>Заборонено:\n<ul>\n<li>перебування у громадських будівлях в масках або респіраторах</li>\n<li>проведення масових заходів: не більше 1 людини на 5 квадратних метрів</li>\n<li>кінотеатри із заповненістю на 50%</li>\n<li>перевезення пасажирів тільки в межах сидячих місць</li>\n<li>відвідування закладів дошкільної, шкільної, позашкільної та спеціалізованої освіти, якщо на самоізоляції понад 50% дітей та персоналу закладу</li>\n</ul>\n</Typography>\n</Paper>\n  </>;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const CustomLink = React.useMemo(\n    () =>\n      React.forwardRef((linkProps, ref) => (\n        <Link ref={ref} to={to} {...linkProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={CustomLink}>\n        <ListItemIcon>{icon}</ListItemIcon> \n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\n\nexport default function MyAppBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = useState([])\n  const [status, setStatus] = useState([]);\n  const [sanitizer, setSanitizer] = useState([]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const watch = true;\n  const {\n    latitude,\n    longitude,\n  } = usePosition(watch);\n  \n  const fetchData = async () => {\n        \n    const response = await fetch(\n      process.env.REACT_APP_BACKEND_API + '/area'\n    );\n    const areas = await response.json();\n    setState({\n                volume_map_data: \n                  \n                    areas.map(vol => ({\n                      id: vol.id,\n                      title: vol.title,                         \n                      latitude: vol.lat,\n                      longitude: vol.lng,\n                      circle: {\n                        radius: vol.radius,\n                        options: {\n                          strokeColor: '#' + vol.color\n                        }\n                      }\n                    }))   \n    });    \n    \n    // console.log(state.volume_map_data);      \n};\n\nconst fetchSanitizer = async () => {\n        \n  const response = await fetch(\n    process.env.REACT_APP_BACKEND_API + '/sanitizer'\n  );\n  const sanitizers = await response.json();\n  setSanitizer({\n              volume_map_sanitizer:  \n                  sanitizers.map(vol => ({\n                    id: vol.id,\n                    title: vol.title,                         \n                    latitude: vol.lat,\n                    longitude: vol.lng,\n                  }))   \n  });      \n  // console.log(state.volume_map_sanitizer);      \n};\n\n// async function getValue(value) {\n//   const response = await fetch(\n//     process.env.REACT_APP_BACKEND_API + '/setting/' + value\n//   );\n//   const value = await response.json();\n// }\n\nconst initData = async () => {\n        \n  const response = await fetch(\n    process.env.REACT_APP_BACKEND_API + '/setting/status_id'\n  );\n  const status_id = await response.json();\n\n  // const status_id = getValue('status_id');\n\n  const response_orange = await fetch(\n    process.env.REACT_APP_BACKEND_API + '/setting/orange'\n  );\n  const orange = await response_orange.json();\n\n  let type = 3;\n  let status_name = '';\n  let status_link = '';\n  let content = '';\n  switch (status_id.value) {\n      case \"1\": type = \"error\"; status_name = \"червоній\"; status_link = \"red\"; content = ''; break;\n      case \"2\": type = \"warning\";  status_name = \"помаранчевій\"; status_link = \"orange\"; content = orange; break;\n      case \"3\": type = \"info\"; status_name = \"жовтій\"; status_link = \"yellow\"; break;\n      case \"4\": default: type = \"success\"; status_name = \"зеленій\"; status_link = \"green\"; break;\n  }\n  setStatus({\n    status_id: status_id.value,\n    type: type,\n    name: status_name,\n    link: status_link\n  });      \n};\n\n  useEffect(() => {\n     initData();   \n     fetchData();   \n     fetchSanitizer();   \n    }, []);\n\n    // console.log('stat ', status.type_id);      \n\n  // const [volume_map_sanitizer, fetchSanitizer] = useState(0);\n\n  const google_map_key = process.env.GOOGLE_MAP_KEY;\n  // console.log(google_map_key);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Stop Pandemia\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Router>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <List onClick={handleDrawerClose}  >\n          <ListItemLink primary={'Статистика'} icon={<EqualizerIcon />} to='/' />\n          <ListItemLink primary={'Рекомендації'} icon={<HelpIcon />} to='/help' />\n          <ListItemLink primary={'Карта'} icon={<MapIcon />} to='/map' />\n          <ListItemLink primary={'Про додаток'} icon={<InboxIcon />} to='/settings' />\n        </List>\n\n        <Divider />\n        {/* <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n\n        <Alert severity={status.type}>\n        <AlertTitle>Увага</AlertTitle>\n      м. Івано-Франківськ - Ви знаходитеся в {status.name} зоні! <Link to={status.link}>Перегляньте наші рекомендації</Link></Alert>\n\n        <Switch>\n          <Route path=\"/red\">\n            <Red />\n          </Route>\n          <Route path=\"/orange\">\n            <Orange />\n          </Route>\n          <Route path=\"/yellow\">\n            <Yellow />\n          </Route>\n          <Route path=\"/green\">\n            <Green />\n          </Route>           \n          <Route path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route path=\"/help\">\n            <Help />\n          </Route>\n          <Route path=\"/map\">\n          <Map \n    center={{ lat: 48.92, lng: 24.71 }}\n    zoom={12}\n    latitude={latitude} \n    longitude={longitude} \n    places={state.volume_map_data}\n    sanitizers={sanitizer.volume_map_sanitizer} \n    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBLlwasnMbQP4pp1Qx0poPnCqnJ_C1lPhk\"  \n    loadingElement={<div style={{ height: `100%` }} />}\n    containerElement={<div style={{ height: `800px` }} />}\n    mapElement={<div style={{ height: `100%` }} />}\n  />\n          </Route>\n          <Route path=\"/\">\n            <DailyStats />\n          </Route>    \n        </Switch>\n      \n        \n      </main>\n      </Router>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport MyAppBar from '../app-bar/app-bar'\n\nexport default class App extends Component { \n  render()  {  \n    return (\n      <>\n        <MyAppBar />\n      </>\n    )\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// importScripts(\"https://js.pusher.com/beams/service-worker.js\");\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  \n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\n// import * as PusherPushNotifications from '@pusher/push-notifications-web'\n\n// const beamsClient = new PusherPushNotifications.Client({\n//     instanceId: '1927be8c-d256-4d48-b1a1-c823d23c3fba',\n//   });\n\n// beamsClient.start()\n//     .then(() => beamsClient.addDeviceInterest('hello'))\n//     .then(() => console.log('Successfully registered and subscribed!'))\n//     .catch(console.error);\n\nReactDOM.render(<App />, document.getElementById('root') );\nserviceWorker.register();\n"],"sourceRoot":""}