{"version":3,"sources":["components/chart/chart.js","services/covid.service.js","components/daily-stats/daily-stats.js","components/map/map.js","components/settings/settings.js","components/app-bar/app-bar.js","components/chat/chat-input/chat-input.js","components/chat/chat-message/chat-message.js","components/chat/chat.js","components/app/app.js","serviceWorker.js","index.js"],"names":["MyChart","series","React","useMemo","showPoints","axes","primary","type","position","style","height","width","data","label","tooltip","covidService","this","_apiBase","url","fetch","res","json","console","error","DailyStats","props","state","cases","deaths","recovered","updateStats","getStats","then","stats","setState","Component","AnyReactComponent","text","Map","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","lat","lng","defaultProps","Settings","myChangeHandler","event","username","target","value","onChange","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MyAppBar","classes","className","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","ChatInput","message","action","onSubmit","e","preventDefault","onSubmitMessage","placeholder","name","URL","Chat","messages","ws","WebSocket","addMessage","submitMessage","messageString","send","JSON","stringify","onopen","log","onmessage","evt","parse","onclose","htmlFor","id","map","index","Help","App","to","path","Boolean","window","location","hostname","match","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5c917167.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { Chart } from 'react-charts'\r\n \r\n// export default class MyChart extends Component {\r\n\r\n//   data() {\r\n//    React.useMemo(\r\n//     () => [\r\n//       {\r\n//         label: 'Series 1',\r\n//         data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n//       },\r\n//       {\r\n//         label: 'Series 2',\r\n//         data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n//       }\r\n//     ],\r\n//     []\r\n//   )}\r\n  \r\n//   axes() {\r\n//    React.useMemo(\r\n//     () => [\r\n//       { primary: true, type: 'linear', position: 'bottom' },\r\n//       { type: 'linear', position: 'left' }\r\n//     ],\r\n//     []\r\n//   )}\r\n \r\n//   render() {\r\n//     return (\r\n//     <div\r\n//       style={{\r\n//         width: '400px',\r\n//         height: '300px'\r\n//       }}\r\n//     >\r\n//       <Chart data={this.data} axes={this.axes} />\r\n//     </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\n\r\nimport React from 'react'\r\n//\r\n// import useChartConfig from 'hooks/useChartConfig'\r\n// import Box from 'components/Box'\r\n// import SyntaxHighlighter from 'components/SyntaxHighlighter'\r\nimport { Chart } from 'react-charts'\r\n\r\nexport default function MyChart () {\r\n\r\n  const data =  [\r\n          {\r\n            label: 'Series 1',\r\n            data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n          },\r\n          {\r\n            label: 'Series 2',\r\n            data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n          }\r\n        ];\r\n  const series = React.useMemo(\r\n    () => ({\r\n      showPoints: false \r\n    }),\r\n    []\r\n  )\r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, type: 'time', position: 'bottom' },\r\n      { type: 'linear', position: 'left' }\r\n    ],\r\n    []\r\n  )\r\n  return (\r\n    <>\r\n<div style={{ height: '50vh', width: '100%' }} >\r\n        <Chart data={data} series={series} axes={axes} tooltip />\r\n</div>    \r\n    </>\r\n  )\r\n}","export default class covidService {\r\n\r\n  constructor() {\r\n    // this._apiBase = 'http://localhost:3000';\r\n    this._apiBase = 'http://ec2-54-80-100-248.compute-1.amazonaws.com:3000';\r\n  }\r\n\r\n  async getStats(url = '/stats') {\r\n    try {\r\n      const res = await fetch(`${this._apiBase}${url}`);\r\n      return await res.json();\r\n    } catch (e) {\r\n      console.error(`Unable to create ${e}`)\r\n    }\r\n    // return await \"[{ deahts: 14 }]\"\r\n  }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport MyChart from '../chart/chart'\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class DailyStats extends Component {\r\n\r\n  covidService = new covidService();\r\n\r\n  state = {\r\n    cases: null,\r\n    deaths: null,\r\n    recovered: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateStats();\r\n  }\r\n\r\n  updateStats() {\r\n    this.covidService.getStats()\r\n      .then((stats) => {\r\n        this.setState({\r\n          cases: stats[0].cases,\r\n          deaths: stats[0].deaths,\r\n          recovered: stats[0].recovered\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { cases, deaths, recovered } = this.state;\r\n    return (\r\n      <>\r\n        <h2>Випадків {cases}</h2>\r\n        <h2>Смертей {deaths}</h2>\r\n        <h2>Виздоровлень {recovered}</h2>\r\n        <MyChart />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n \r\nexport default class Map extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 48.92,\r\n      lng: 24.71\r\n    },\r\n    zoom: 11\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyBLlwasnMbQP4pp1Qx0poPnCqnJ_C1lPhk' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n            lat={59.955413}\r\n            lng={30.337844}\r\n            text=\"My Marker\"\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport covidService from '../../services/covid.service';\r\n\r\nexport default class Settings extends Component {\r\n\r\n  covidService = new covidService();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: '' };\r\n  }\r\n\r\n  myChangeHandler = (event) => {\r\n    this.setState({username: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <form>\r\n        <h1>Налаштування</h1>\r\n        <h2>привіт, {this.state.username}</h2>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.myChangeHandler}\r\n        />\r\n      </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nexport default function MyAppBar() {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          COVID Alert\r\n        </Typography>\r\n        <Button color=\"inherit\">Login</Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </div>\r\n  );\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ChatInput extends Component {\r\n  static propTypes = {\r\n    onSubmitMessage: PropTypes.func.isRequired,\r\n  }\r\n  state = {\r\n    message: '',\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        action=\".\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          this.props.onSubmitMessage(this.state.message)\r\n          this.setState({ message: '' })\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder={'Enter message...'}\r\n          value={this.state.message}\r\n          onChange={e => this.setState({ message: e.target.value })}\r\n        />\r\n        <input type=\"submit\" value={'Send'} />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChatInput","import React from 'react'\r\n\r\nexport default ({ name, message }) =>\r\n  <p>\r\n    <strong>{name}</strong> <em>{message}</em>\r\n  </p>","import React, { Component } from 'react'\r\nimport ChatInput from './chat-input/chat-input'\r\nimport ChatMessage from './chat-message/chat-message'\r\n\r\nconst URL = 'ws://localhost:3030'\r\n\r\nclass Chat extends Component {\r\n  state = {\r\n    name: 'Bob',\r\n    messages: [],\r\n  }\r\n\r\n  ws = new WebSocket(URL)\r\n\r\n  componentDidMount() {\r\n    this.ws.onopen = () => {\r\n      // on connecting, do nothing but log it to the console\r\n      console.log('connected')\r\n    }\r\n\r\n    this.ws.onmessage = evt => {\r\n      // on receiving a message, add it to the list of messages\r\n      const message = JSON.parse(evt.data)\r\n      this.addMessage(message)\r\n    }\r\n\r\n    this.ws.onclose = () => {\r\n      console.log('disconnected')\r\n      // automatically try to reconnect on connection loss\r\n      this.setState({\r\n        ws: new WebSocket(URL),\r\n      })\r\n    }\r\n  }\r\n\r\n  addMessage = message =>\r\n    this.setState(state => ({ messages: [message, ...state.messages] }))\r\n\r\n  submitMessage = messageString => {\r\n    // on submitting the ChatInput form, send the message, add it to the list and reset the input\r\n    const message = { name: this.state.name, message: messageString }\r\n    this.ws.send(JSON.stringify(message))\r\n    this.addMessage(message)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"name\">\r\n          Name:&nbsp;\r\n          <input\r\n            type=\"text\"\r\n            id={'name'}\r\n            placeholder={'Enter your name...'}\r\n            value={this.state.name}\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n          />\r\n        </label>\r\n        <ChatInput\r\n          ws={this.ws}\r\n          onSubmitMessage={messageString => this.submitMessage(messageString)}\r\n        />\r\n        {this.state.messages.map((message, index) =>\r\n          <ChatMessage\r\n            key={index}\r\n            message={message.message}\r\n            name={message.name}\r\n          />,\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chat","import React, { Component } from 'react';\r\nimport DailyStats from '../daily-stats/daily-stats'\r\nimport Map from '../map/map'\r\nimport Settings from '../settings/settings'\r\n// import BottomNav from '../bottom-nav/bottom-nav'\r\nimport MyAppBar from '../app-bar/app-bar'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Chat from '../chat/chat'\r\n\r\n\r\nfunction Help() {\r\n  return <>\r\n  <h3>Знання достовірних фактів і дотримання запобіжних заходів допоможуть вам захистити себе й оточуючих. \r\n    Виконуйте поради місцевого органу охорони здоров’я.</h3>\r\n<p>Як зупинити поширення COVID-19:\r\nчасто мийте руки милом і водою або використовуйте спиртовмісний антисептик для рук;\r\nтримайтеся на безпечній відстані від усіх, хто кашляє або чхає;\r\nвдягайте маску, якщо дотримуватися дистанції неможливо;\r\nне торкайтеся очей, носа або рота;\r\nпід час кашлю або чхання прикривайте ніс і рот зігнутим ліктем або серветкою;\r\nне виходьте з дому, якщо погано почуваєтесь;\r\nякщо у вас лихоманка, кашель і вам важко дихати, зверніться до лікаря.</p>\r\n  </>;\r\n}\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  \r\n  render()  { // { match }\r\n  \r\n\r\n\r\n    return (\r\n      <>\r\n\r\n      <MyAppBar />\r\n      \r\n      <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Статистика</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/help\">Рекомендації</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/map\">Карта</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/chat\">Зв'язок з лікарем</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/settings\">Налаштування</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/settings\">\r\n            <Settings />\r\n          </Route>\r\n          <Route path=\"/chat\">\r\n            <Chat />\r\n          </Route>      \r\n          <Route path=\"/help\">\r\n            <Help />\r\n          </Route>\r\n          <Route path=\"/map\">\r\n            <Map />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <DailyStats />\r\n          </Route>    \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n      {/* <BottomNav /> */}\r\n      </>\r\n    )\r\n  }\r\n\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst renderReactDom = () => {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n  };\r\n\r\nif (window.cordova) {\r\n    document.addEventListener('deviceready', () => {\r\n      renderReactDom();\r\n    }, false);\r\n  } else {\r\n    renderReactDom();\r\n  }\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}